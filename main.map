{"version":3,"file":"/Users/gsoed/proj/protoboard/main.js","sources":["@traceur/generated/TemplateParser/3","/Users/gsoed/proj/protoboard/src/utils.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/1","/Users/gsoed/proj/protoboard/src/ability/ability.js","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/5","/Users/gsoed/proj/protoboard/src/hammerwrapper.js","/Users/gsoed/proj/protoboard/src/ability/triggerable.js","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/11","/Users/gsoed/proj/protoboard/src/ability/abilities.js","@traceur/generated/TemplateParser/12","/Users/gsoed/proj/protoboard/src/check.js","/Users/gsoed/proj/protoboard/src/events.js","/Users/gsoed/proj/protoboard/src/service/dragdrop.js","/Users/gsoed/proj/protoboard/src/ability/draggable.js","/Users/gsoed/proj/protoboard/src/ability/rotateable.js","/Users/gsoed/proj/protoboard/src/ability/toggleable.js","/Users/gsoed/proj/protoboard/src/ability/contextable.js","/Users/gsoed/proj/protoboard/src/pbelement.js","@traceur/generated/TemplateParser/13","/Users/gsoed/proj/protoboard/src/component/component.js","@traceur/generated/TemplateParser/14","/Users/gsoed/proj/protoboard/src/component/card.js","/Users/gsoed/proj/protoboard/src/component/token.js","/Users/gsoed/proj/protoboard/src/ability/droppable.js","/Users/gsoed/proj/protoboard/src/service/distribute.js","/Users/gsoed/proj/protoboard/src/region/region.js","/Users/gsoed/proj/protoboard/src/region/bag.js","/Users/gsoed/proj/protoboard/src/ability/shuffleable.js","/Users/gsoed/proj/protoboard/src/region/deck.js","/Users/gsoed/proj/protoboard/src/region/rect.js","/Users/gsoed/proj/protoboard/src/surface/rectgrid.js","/Users/gsoed/proj/protoboard/src/service/preview.js","/Users/gsoed/proj/protoboard/src/ui/preview.js","/Users/gsoed/proj/protoboard/src/ui/previewer.js","/Users/gsoed/proj/protoboard/src/ui/template.js"],"names":[],"mappings":"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","sourceRoot":"/Users/gsoed/proj/protoboard/","sourcesContent":["var __moduleName = $__placeholder__0;","/**\n * Various miscellaneous utilities.\n * @class Utils\n * @static\n */\n\nvar Utils = {\n  /**\n   * Extracts the given template from the given document.\n   * \n   * @method  extractTemplate\n   * @param  {string} templateQuery The query used to obtain the template.\n   * @param  {!Document} doc The document object to obtain the template from.\n   * @return {!Node} The node in the template.\n   */\n  extractTemplate(templateQuery, doc) {\n    return this.activateTemplate(doc.querySelector(templateQuery), doc);\n  },\n\n  activateTemplate(template, doc) {\n    return doc.importNode(template.content, true);\n  },\n\n  /**\n   * Returns the referenced function, or noop function if the referenced function does not exist.\n   * \n   * @method  nonNullFn\n   * @param  {!Object} scope Object containing the referenced function.\n   * @param  {string} name Name of the function to return.\n   * @return {!Function} The referenced function, or noop function if the referenced function does\n   *     not exist.\n   */\n  nonNullFn(scope, name) {\n    return scope[name] || (() => {});\n  },\n\n  /**\n   * Observes the given property on the given object.\n   * \n   * @method  observe\n   * @param {!Object} object Object to observe changes to.\n   * @param {string|null} property The property name to listen to, or null to listen to all \n   *     properties.\n   * @param {Function} handler Handler called when a property has changed. The handler accepts 3\n   *     arguments: property name, change type, and the old value of the property.\n   * TODO(gs): Make this work with scopes.\n   *\n   * @return {Function} The handler used to unobserve the object.\n   */\n  observe(object, property, handler) {\n    var newHandler = function(changes) {\n      changes.forEach(change => {\n        if (!property || change.name === property) {\n          handler(change.name, change.type, change.oldValue);\n        }\n      });\n    };\n    Object.observe(object, newHandler);\n    return newHandler;\n  },\n\n  /**\n   * Returns a Promise that waits for the given property of the given object to fulfill the given \n   * condition.\n   *\n   * @method waitFor\n   * @param {!Object} object Object containing the property to wait for.\n   * @param {string} property The name of the property to wait for.\n   * @param {*} condition If Function, this method will call the function with the property value\n   *     and will wait for the function to return true. Otherwise, this will wait for the property\n   *     to match this.\n   */\n  waitFor(object, property, condition) {\n    let promise = new Promise((resolve, reject) => {\n      let truthFn = (typeof condition === 'function') ? \n          condition : v => v === condition;\n      if (truthFn(object[property])) {\n        resolve(object, property);\n      } else {\n        let observer = (changes) => {\n          if (truthFn(object[property])) {\n            Object.unobserve(object, observer);\n            resolve(object, property);\n          }\n        };\n        Object.observe(object, observer);\n      }\n    });\n\n    return promise;\n  },\n\n  compare(a, b) {\n    if (typeof a === 'number' && typeof b === 'number') {\n      if (a < b) {\n        return -1;\n      } else if (a > b) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n\n    return undefined;\n  },\n\n  toArray(obj) {\n    let array = [];\n    for (let i = 0; i < obj.length; i++) {\n      array[i] = obj[i];\n    }\n    return array;\n  },\n\n  /**\n   * Makes the given target to be globally available.\n   *\n   * @method makeGlobal\n   * @param {string} namespace The namespace of the target. This should be separated by '.'.\n   * @param {Object=} target The target object to be made globally available.\n   */\n  makeGlobal(namespace, target) {\n    let currentScope = window;\n    let pathArr = namespace.split('.');\n    pathArr.forEach((path, i) => {\n      if (i === (pathArr.length - 1)) {\n        if (!currentScope[path]) {\n          currentScope[path] = target;\n        } else {\n          throw `${namespace} already exists`; \n        }\n      } else {\n        if (!currentScope[path]) {\n          currentScope[path] = {};\n        }\n      }\n      currentScope = currentScope[path];\n    });\n  },\n\n  /**\n   * Replaces the specified function to call the given function before or after the original \n   * function. The given function will be called with the same arguments and scope as the original\n   * function.\n   *\n   * @method extendFn\n   * @param {Object} scope The object containing the function to replace.\n   * @param {string} name The name of the function to replace.\n   * @param {!Function} fn Function to be called.\n   * @param {boolean} callBefore True iff the function should be called before the original \n   *     function. Defaults to false.\n   */\n  extendFn(scope, name, fn, callBefore) {\n    let oldFn = scope[name];\n    scope[name] = function() {\n      if (callBefore) {\n        let rv = fn.apply(this, arguments);\n        if (!oldFn) {\n          return rv;\n        }\n      }\n\n      if (oldFn) {\n        let rv = oldFn.apply(this, arguments);\n        if (callBefore) {\n          return rv;\n        }\n      }\n\n      if (!callBefore) {\n        return fn.apply(this, arguments);\n      }\n    };\n  },\n\n  /**\n   * Makes the given function curried.\n   *\n   * @method curry\n   * @param {!Function} fn The function to be curried.\n   * @return {!Function} The curried function.\n   */\n  curry(fn) {\n    return function() {\n      if (arguments.length >= fn.length) {\n        return fn.apply(this, arguments);\n      } else {\n        let argArray = Utils.toArray(arguments);\n        return Utils.curry(fn.bind.apply(fn, [this].concat(argArray)));\n      }\n    };\n  },\n\n  // TODO(gs): Move to test utils.\n  getSymbol(obj, name) {\n    return Object.getOwnPropertySymbols(obj).find(symbol => {\n      return `Symbol(${name})` === symbol.toString();\n    });\n  }\n};\n\nexport default Utils = Utils;\n\nUtils.makeGlobal('pb.Utils', Utils);\n","$__placeholder__0[$traceurRuntime.toProperty($__placeholder__1)]","var $__default = $__placeholder__0","return $__placeholder__0","get $__placeholder__0() { return $__placeholder__1; }","import Utils from 'src/utils';\n\n/**\n * Base class for all abilities. Any abilities must extend this class and implement the methods\n * in this class.\n *\n * @class ability.Ability\n */\nexport default class Ability {\n\n  /**\n   * Sets the default value of the given element.\n   *\n   * @method setDefaultValue\n   * @param {!Element} el The element whose default value should be set.\n   */\n  setDefaultValue(el) { }\n\n  /**\n   * Called when an attribute was changed.\n   *\n   * @method attributeChangedCallback\n   * @param {!Element} el The element whose attribute was changed.\n   * @param {string} name The name of the attribute that was changed.\n   * @param {Object} oldValue The old value of the attribute.\n   * @param {Object} newValue The new value of the attribute.\n   */\n  attributeChangedCallback(el, name, oldValue, newValue) { }\n\n  /**\n   * Called when the element is attached to the document.\n   *\n   * @method attachedCallback\n   * @param {!Element} el The element that was attached.\n   */\n  attachedCallback(el) { }\n\n  /**\n   * Called when the element is detached from the document.\n   *\n   * @method detachedCallback\n   * @param {!Element} el The element that was detached.\n   */\n  detachedCallback(el) { }\n\n  /**\n   * Triggers the effect of the ability on the given element.\n   *\n   * @method trigger\n   * @param {!Element} el The element to trigger the ability on.\n   */\n  trigger(el) { }\n\n  /**\n   * The name of the ability. This is used as an ID to refer to the registered abilities.\n   * \n   * @property name\n   * @type string\n   * @readonly\n   */\n  get name() { throw 'unimplemented'; }\n}\n\nif (window['TEST_MODE']) {\n  Utils.makeGlobal('pb.ability.Ability', Ability);\n}\n","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)","var $__default = $__placeholder__0","import Utils from 'src/utils';\n\n/**\n * Wrapper around Hammer JS.\n * \n * @class pb.HammerWrapper\n * @static\n */\n\n// Private symbols\nconst __hammer__ = Symbol();\nconst __getHammer__ = Symbol();\n\nlet HammerWrapper = {\n\n  /**\n   * Creates a new Hammer object, or return a cached one if one already exists.\n   *\n   * @method __getHammer__\n   * @param {!Element} el The element associated with the Hammer JS object.\n   * @return {!Hammer} The Hammer JS object.\n   * @private\n   */\n  [__getHammer__](el) {\n    if (!el[__hammer__]) {\n      // TODO(gs): This is not set if the script runs in HTML import.\n      if (!el.ownerDocument.parentWindow) {\n        el.ownerDocument.parentWindow = window;\n      }\n\n      let hammer = new Hammer.Manager(el);\n      hammer.add(new Hammer.Tap({ event: 'doubletap', taps: 2, interval: 250 }));\n      hammer.add(new Hammer.Tap({ event: 'singletap', taps: 1, interval: 250 }));\n\n      hammer.get('doubletap').recognizeWith('singletap');\n      hammer.get('singletap').requireFailure('doubletap');\n      el[__hammer__] = hammer;\n\n    }\n    return el[__hammer__];\n  },\n\n  /**\n   * Registers the given gesture to the given element and handler.\n   * \n   * @method on\n   * @param {!Element} el The element to register.\n   * @param {string} gestureType The type of Hammer JS gesture to register.\n   * @param {!Function} handler The handler function to register.\n   */\n  on(el, gestureType, handler) {\n    this[__getHammer__](el).on(gestureType, handler);\n  },\n\n  /**\n   * Unregisters the given gesture from the given element and handler.\n   *\n   * @method off\n   * @param {!Element} el Element to unregister from.\n   * @param {string} gestureType Type of Hammer JS gesture to register.\n   * @param {!Function} handler The handler function to unregister.\n   */\n  off(el, eventType, handler) {\n    this[__getHammer__](el).on(eventType, handler);\n  }\n};\n\nexport default HammerWrapper = HammerWrapper;\n\nif (window['TEST_MODE']) {\n  Utils.makeGlobal('pb.HammerWrapper', HammerWrapper);\n}\n","import HammerWrapper from 'src/hammerwrapper';\nimport Utils         from 'src/utils';\n\nimport Ability from 'src/ability/ability';\n\n/**\n * Provides triggers to abilities supported by the app. Normally you don't need to register this to\n * the app. [[ability.Abilities|ability.Abilities]] should do this for you.\n *\n * To use this class, add the trigger as an attribute name, and the name of the ability as its \n * value.\n *\n * Supported triggers:\n * - `pb-click`: Triggers when the element is clicked.\n * - `pb-dblclick`: Triggers when the element is double clicked.\n * \n * @class ability.Triggerable\n * @extends ability.Ability\n */\n\n// Private symbols.\nconst __defaultValue__ = Symbol();\nconst __knownAbilities__ = Symbol();\nconst __triggers__ = Symbol();\n\nconst __getEvent__ = Symbol('getEvent');\nconst __getTriggers__ = Symbol('getTriggers');\nconst __isRegistered__ = Symbol('isRegistered');\nconst __register__ = Symbol('register');\nconst __unregister__ = Symbol('unregister');\n\nclass Triggerable extends Ability {\n\n  /**\n   * @constructor\n   * @param {Object=} defaultValue An object with the triggerable type string as the key, and \n   *     the triggered ability's name as the value. These keys correspond to the element's \n   *     attributes. Defaults to empty object.\n   * @param {Array.<ability.Ability>=} knownAbilities A list of known abilities. This is used \n   *     when the element's attribute value is changed. Defaults to empty array.\n   */\n  constructor(defaultValue = {}, knownAbilities = []) {\n    this[__defaultValue__] = defaultValue;\n    this[__knownAbilities__] = {};\n    for (let ability of knownAbilities) {\n      this[__knownAbilities__][ability.name] = ability;\n    }\n  }\n  \n  /**\n   * Returns the event associated with the trigger type.\n   * \n   * @method __getEvent__\n   * @param {ability.Triggerable.TYPES} triggerType The type of trigger whose event should be \n   *     returned.\n   * @return {string} The event related to the trigger type.\n   * @private\n   */\n  [__getEvent__](triggerType) {\n    switch (triggerType) {\n      case Triggerable.TYPES.CLICK:\n        return 'singletap';\n      case Triggerable.TYPES.DOUBLE_CLICK:\n        return 'doubletap';\n      default:\n        throw 'Unrecognized trigger: ' + triggerType;\n    }\n  }\n\n  /**\n   * Returns the triggers registered to the given element.\n   * \n   * @method  __getTriggers__\n   * @param {!Element} el The element to return the registered triggers from.\n   * @return {Object} Object with key being the trigger type, and the value being the ability that\n   *     is triggered by the key.\n   * @private\n   */\n  [__getTriggers__](el) {\n    if (!el[__triggers__]) {\n      el[__triggers__] = {};\n    }\n    return el[__triggers__];\n  }\n\n  /**\n   * Returns if the element is registered with the given ability.\n   *\n   * @method  __isRegistered__\n   * @param {!Element} el The element to check.\n   * @param {!ability.Triggerable.TYPES} triggerType The type of trigger to check.\n   * @param {string} abilityName The name of ability to check.\n   * @return {boolean} True iff the element is registered to trigger the given ability name on the\n   *     given trigger type.\n   * @private\n   */\n  [__isRegistered__](el, triggerType, abilityName) {\n    if (!this[__getTriggers__](el)[triggerType]) {\n      return false;\n    }\n    let ability = this[__getTriggers__](el)[triggerType].ability;\n    return ability && abilityName === ability.name;\n  }\n\n  /**\n   * Registers the given element to trigger the given ability.\n   *\n   * @method  __register__\n   * @param {!Element} el The element to register.\n   * @param {!ability.Triggerable.TYPES} triggerType The type of trigger to register.\n   * @param {ability.Ability} ability The ability to register.\n   * @private\n   */\n  [__register__](el, triggerType, ability) {\n    if (!this[__isRegistered__](el, triggerType, ability.name)) {\n      // Only registers if there aren't any triggers registered.\n      let handlers = this[__getTriggers__](el);\n      handlers[triggerType] = {ability: ability, handler: ability.trigger.bind(ability, el)};\n      HammerWrapper.on(el, this[__getEvent__](triggerType), handlers[triggerType].handler);\n    }\n  }\n\n  /**\n   * Unregisters the given trigger type from the element.\n   *\n   * @method __unregister__\n   * @param {!Element} el The element to unregister from.\n   * @param {!ability.Triggerable.TYPES} triggerType The type of trigger to unregister.\n   * @private\n   */\n  [__unregister__](el, triggerType) {\n    let handlers = this[__getTriggers__](el);\n    if (handlers[triggerType]) {\n      HammerWrapper.off(el, this[__getEvent__](triggerType), handlers[triggerType].handler);\n      delete handlers[triggerType];\n    }\n  }\n\n  /**\n   * Sets the default value of the given element.\n   *\n   * @method setDefaultValue\n   * @param {!Element} el The element whose default value should be set.\n   */\n  setDefaultValue(el) {\n    for (let key in Triggerable.TYPES) {\n      let type = Triggerable.TYPES[key]; \n      let abilityName = this[__defaultValue__][type];\n      if ($(el).attr(type) === undefined && abilityName && this[__knownAbilities__][abilityName]) {\n        $(el).attr(type, abilityName);\n      }\n    }\n  }\n\n  /**\n   * Handles attribute change.\n   *\n   * @method attributeChangedCallback\n   * @param {!Element} el The element whose attribute was changed.\n   * @param {string} name Name of the attribute that was changed.\n   * @param {string} oldValue Old value of the changed attribute.\n   * @param {string} newValue New value of the changed attribute.\n   */\n  attributeChangedCallback(el, name, oldValue, newValue) {\n    for (let key in Triggerable.TYPES) {\n      if (name === Triggerable.TYPES[key]) {\n        // Unregister the old ability.\n        if (oldValue && this[__knownAbilities__][oldValue]) {\n          this[__unregister__](el, name, this[__knownAbilities__][oldValue]);\n        }\n\n        if (newValue && this[__knownAbilities__][newValue]) {\n          this[__register__](el, name, this[__knownAbilities__][newValue]);\n        }\n      }\n    }\n  }\n\n  /**\n   * Called when the element is attached to the document.\n   *\n   * @method attachedCallback\n   * @param {!Element} el The element that was attached.\n   */\n  attachedCallback(el) {\n    for (let key in Triggerable.TYPES) {\n      let triggerType = Triggerable.TYPES[key];\n      let abilityName = $(el).attr(triggerType);\n      if (abilityName && this[__knownAbilities__][abilityName]) {\n        this[__register__](el, triggerType, this[__knownAbilities__][abilityName]);\n      }\n    }\n  }\n\n  /**\n   * Called when the element is detached from the document.\n   *\n   * @method detachedCallback\n   * @param {!Element} el The element that was detached.\n   */\n  detachedCallback(el) {\n    for (let key in Triggerable.TYPES) {\n      this[__unregister__](el, Triggerable.TYPES[key]);\n    }\n  }\n\n  /**\n   * The name of the ability. This is used as an ID to refer to the registered abilities.\n   * \n   * @property name\n   * @type string\n   * @readonly\n   */\n  get name() {\n    return 'pb-triggerable';\n  }\n}\n\nTriggerable.TYPES = {\n  /**\n   * Triggers when the element is clicked.\n   *\n   * @attribute pb-click\n   */\n  CLICK: 'pb-click',\n\n  /**\n   * Triggers when the element is double clicked.\n   *\n   * @attribute pb-dblclick\n   */\n  DOUBLE_CLICK: 'pb-dblclick'\n};\n\nexport default Triggerable = Triggerable;\n\nif (window['TEST_MODE']) {\n  Utils.makeGlobal('pb.ability.Triggerable', Triggerable);\n}\n","\n        for (var $__placeholder__0 =\n                 $__placeholder__1[Symbol.iterator](),\n                 $__placeholder__2;\n             !($__placeholder__3 = $__placeholder__4.next()).done; ) {\n          $__placeholder__5;\n          $__placeholder__6;\n        }","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","if (!$traceurRuntime.isSymbolString($__placeholder__0)) $__placeholder__1","import Triggerable from 'src/ability/triggerable';\nimport Utils       from 'src/utils';\n\n// Private symbols.\nconst __register__ = Symbol();\n\nconst __abilities__ = Symbol();\n\n\n/**\n * Entry point to add any abilities to custom elements. Note that this only works on custom\n * elements.\n *\n * @class ability.Abilities\n * @static\n */\nconst Abilities = {\n\n  /**\n   * Registers the given ability to the given constructor.\n   *\n   * @method __register__\n   * @param {!Object} ctorProto The prototype of the constructor to register to.\n   * @param {!ability.Ability} ability The ability to register.\n   * @private\n   * @static\n   */\n  [__register__](ctorProto, ability) {\n    Utils.extendFn(\n        ctorProto,\n        'createdCallback',\n        function() {\n          if (!this[__abilities__]) {\n            this[__abilities__] = {};\n          }\n          this[__abilities__][ability.name] = ability;\n          ability.setDefaultValue.call(ability, this);\n        });\n    Utils.extendFn(\n        ctorProto, \n        'attributeChangedCallback', \n        function(name, oldValue, newValue) {\n          ability.attributeChangedCallback.call(ability, this, name, oldValue, newValue);\n        });\n    Utils.extendFn(\n        ctorProto, \n        'attachedCallback', \n        function() {\n          ability.attachedCallback.call(ability, this);\n        });\n    Utils.extendFn(\n        ctorProto, \n        'detachedCallback', \n        function() {\n          ability.detachedCallback.call(ability, this);\n        }, \n        true /* callBefore */);\n  },\n\n  /**\n   * Configures the given constructor to add abilities. This only works if the constructor is used\n   * for custom elements.\n   *\n   * Look at other classes in ability module to see what are supported.\n   *\n   * @method config\n   * @param {!Function} ctor Constructor of the element to add the abilities to.\n   * @param {!Map.<string, ability.Ability>} cfg Map with the trigger type as the key, and ability\n   *    to be triggered as the value.\n   * @param {ability.Ability} [...abilities] Other abilities to register.\n   * @static\n   */\n  config(ctor, cfg, ...abilities) {\n    let ctorProto = ctor.prototype;\n    let triggerConfig = {};\n    // collect the known abilities.\n    let knownAbilities = new Set();\n\n    // Get from config\n    for (let key in cfg) {\n      let ability = cfg[key];\n      knownAbilities.add(ability);\n      this[__register__](ctorProto, ability);\n      triggerConfig[key] = ability.name;\n    }\n\n    // Get from the rest of abilities\n    for (let ability of abilities) {\n      knownAbilities.add(ability);\n      this[__register__](ctorProto, ability);\n    }\n\n    this[__register__](ctorProto, new Triggerable(triggerConfig, knownAbilities));\n\n    return ctor;\n  }\n};\n\nexport default Abilities;\n\nif (window['TEST_MODE']) {\n  Utils.makeGlobal('pb.ability.Abilities', Abilities);\n}\n","\n            for (var $__placeholder__0 = [], $__placeholder__1 = $__placeholder__2;\n                 $__placeholder__3 < arguments.length; $__placeholder__4++)\n              $__placeholder__5[$__placeholder__6 - $__placeholder__7] = arguments[$__placeholder__8];","import Utils from 'src/utils';\n\n// Private symbols.\nconst __addChecked__ = Symbol();\nconst __checked__ = Symbol();\nconst __input__ = Symbol();\nconst __value__ = Symbol();\n\nclass Continuation {\n\n  [__addChecked__](checked) {\n    return new Continuation(\n        this[__input__], \n        this[__value__], \n        this[__checked__].concat(checked));\n  }\n\n  constructor(input, value = undefined, checked = []) {\n    this[__checked__] = checked;\n    this[__input__] = input;\n    this[__value__] = value;\n  }\n\n  isInt(radix = 10) {\n    let output = Number.parseInt(this[__input__], radix);\n    if (Number.isNaN(output)) {\n      return this[__addChecked__](`int(radix = ${radix})`);\n    }\n\n    return new Continuation(this[__input__], output);\n  }\n\n  isBoolean() {\n    return new Continuation(this[__input__], this[__input__].toLowerCase() === 'true');\n  }\n\n  orThrows(msg) {\n    if (this[__value__] === undefined) {\n      if (!msg) {\n        msg = `Illegal Exception. Checked: ${this[__checked__].join(', ')} ` +\n            `but was ${this[__input__]}`;\n      }\n      throw msg;\n    } else {\n      return this[__value__];\n    }\n  }\n\n  orUse(backup) {\n    return (this[__value__] === undefined) ? backup : this[__value__];\n  }\n}\n\nfunction check(input) {\n  return new Continuation(input);\n}\n\nexport default check;\n\nUtils.makeGlobal('pb.Check', check);\n","import Utils from 'src/utils';\n\n/**\n * Utility class to register / unregister events easily.\n *\n * @class Events\n * @static\n */\n\nconst TYPES = {\n  DOM: 'dom',\n  JQUERY: 'jquery'\n};\n\nconst HANDLERS = {\n  [TYPES.DOM]: {\n    register: function(action, eventName, handler) {\n      action[__element__].addEventListener(eventName, handler);\n    },\n    unregister: function(action, eventName, handler) {\n      action[__element__].removeEventListener(eventName, handler);\n    }\n  },\n\n  [TYPES.JQUERY]: {\n    register: function(action, eventName, handler) {\n      $(action[__element__]).on(eventName, handler);\n    },\n    unregister: function(action, eventName, handler) {\n      $(action[__element__]).off(eventName, handler);\n    }\n  }\n};\n\n// Private symbols.\nconst __element__ = Symbol();\nconst __scope__ = Symbol();\n\nconst __isRegistered__ = Symbol('isRegistered');\nconst __register__ = Symbol('register');\nconst __unregister__ = Symbol('unregister');\n\nclass Action {\n\n  /**\n   * @constructor\n   * @param {!Element} element Element to operate on.\n   * @param {!Object} scope Scope of the registered events.\n   */\n  constructor(element, scope) {\n    this[__element__] = element;\n    \n    if (!this[__element__][__scope__]) {\n      this[__element__][__scope__] = {};\n    }\n  }\n\n  /**\n   * @method __isRegistered__\n   * @param {string} type The type of event to be checked.\n   * @param {string} eventName Name of the event to be checked.\n   * @param {Function=} handler The function to be checked.\n   * @return {Boolean} If handler is given, true iff the handler is registered to the given event\n   *     name and type. Otherwise, true iff there is a handler registered to the event name and \n   *     type.\n   * @private\n   */\n  [__isRegistered__](type, eventName, handler) {\n    if (!this[__element__][__scope__][type]) {\n      return false;\n    }\n\n    // TODO(gs): This check is too strict.\n    let eventSet = this[__element__][__scope__][type][eventName];\n    if (handler) {\n      return !!eventSet && eventSet.has(handler);\n    } else {\n      return !!eventSet && eventSet.size > 0;\n    }\n  }\n\n  /**\n   * Registers the given handler to the given event name for the given type.\n   *\n   * @method __register__\n   * @param {string} type The type of event to register the handler to.\n   * @param {string} eventName Name of the event to register the handler to.\n   * @param {!Function} handler Handler to be called for the given event.\n   * @return {Events} The Events object for chaining.\n   * @private\n   */\n  [__register__](type, eventName, handler) {\n    if (this[__isRegistered__](type, eventName, handler)) {\n      return this;\n    }\n\n    HANDLERS[type].register(this, eventName, handler);\n\n    if (!this[__element__][__scope__][type]) {\n      this[__element__][__scope__][type] = {};\n    }\n\n    if (!this[__element__][__scope__][type][eventName]) {\n      this[__element__][__scope__][type][eventName] = new Set();\n    }\n    this[__element__][__scope__][type][eventName].add(handler);\n    return this;\n  }\n\n  /**\n   * Unregisters the handlers in the scope for the element.\n   *\n   * - If type, eventName and handler are given, only the handler listening to that event of that\n   *   type will be unregistered.\n   * - If only type and eventName are given, all handlers listening to that event name of that type\n   *   will be unregistered.\n   * - If only type is given, all handlers listening for that type will be unregistered.\n   * - If nothing is given, all handlers in the scope will be unregistered.\n   *\n   * @method __unregister__\n   * @param {string=} type Type of event to unregister.\n   * @param {string=} eventName If given, all handlers listening to this event will be \n   *     unregistered.\n   * @param {Function=} handler Handler to unlisten.\n   * @return {!Events} The Events object for chaining.\n   * @private\n   */\n  [__unregister__](type, eventName, handler) {\n    if (!type) {\n      // Unregisters all events.\n      for (let registeredType in this[__element__][__scope__]) {\n        this[__unregister__](registeredType);\n      }\n      return this;\n    }\n\n    if (!eventName) {\n      // Unregisters all events of the given type.\n      for (let event in this[__element__][__scope__][type]) {\n        this[__unregister__](type, event);\n      }\n      return this;\n    }\n\n    let eventSet = this[__element__][__scope__][type][eventName];\n    if (!eventSet) {\n      // Nothing is registered for this event name. Quit immediately.\n      return this;\n    }\n\n    if (!handler) {\n      // Unregisters all handlers for the given event name\n      eventSet.forEach(\n          registeredHandler => this[__unregister__](type, eventName, registeredHandler));\n    } else {\n      // Unregister the given event name.\n      HANDLERS[type].unregister(this, eventName, handler);\n      eventSet.delete(handler);\n    }\n\n    return this;\n  }\n\n  /**\n   * Calls addEventListener to the element, registering the given event name and handler.\n   *\n   * @method listen\n   * @param {string} eventName Name of the event to register the handler to.\n   * @param {!Function} handler Handler to be called for the given event.\n   * @return {Events} The Events object for chaining.\n   */\n  listen(eventName, handler) {\n    return this[__register__](TYPES.DOM, eventName, handler);\n  }\n\n  /**\n   * Calls removeEventListener to the element, unregistering the handlers in the scope for the \n   * element.\n   *\n   * - If eventName and handler are given, only the handler listening to that event will be \n   *   unlistened.\n   * - If only eventName is given, all handlers listening to that event name will be unlistened.\n   * - If nothing is given, all handlers in the scope will be unlistened.\n   *\n   * @method unlisten\n   * @param {string=} eventName If given, all handlers listening to this event will be \n   *     unlistened.\n   * @param {Function=} handler Handler to unlisten.\n   * @return {!Events} The Events object for chaining.\n   */\n  unlisten(eventName, handler) {\n    return this[__unregister__](TYPES.DOM, eventName, handler);\n  }\n\n  /**\n   * @method hasListener\n   * @param {string} eventName Name of the event to be checked.\n   * @param {Function=} handler The function to be checked.\n   * @return {Boolean} If handler is given, true iff the handler is listening to the given event\n   *     name. Otherwise, true iff there is a handler registered to the event name.\n   */\n  hasListener(eventName, handler) {\n    return this[__isRegistered__](TYPES.DOM, eventName, handler);\n  }\n\n  /**\n   * Calls jQuery's on method on the element, registering the given event name and handler.\n   *\n   * @method on\n   * @param {string} eventName Name of the event to register the handler to.\n   * @param {!Function} handler Handler to be called for the given event.\n   * @return {Events} The Events object for chaining.\n   */\n  on(eventName, handler) {\n    return this[__register__](TYPES.JQUERY, eventName, handler);\n  }\n\n  /**\n   * Calls jQuery's off method on the element, unregistering the handlers in the scope for the \n   * element.\n   *\n   * - If eventName and handler are given, only the handler listening to that event will be \n   *   unlistened.\n   * - If only eventName is given, all handlers listening to that event name will be unlistened.\n   * - If nothing is given, all handlers in the scope will be unlistened.\n   *\n   * @method off\n   * @param {string=} eventName If given, all handlers listening to this event will be \n   *     unlistened.\n   * @param {Function=} handler Handler to stop listening to.\n   * @return {!Events} The Events object for chaining.\n   */\n  off(eventName, handler) {\n    return this[__unregister__](TYPES.JQUERY, eventName, handler);\n  }\n}\n\nlet Events = {\n  /**\n   * Creates an Events object that operates on the given element with the given scope.\n   *\n   * @method of\n   * @param  {!Element} element The element to operate on.\n   * @param  {!Object} scope Scope of the registered events.\n   * @return {!Events} Chainable Events object.\n   * @static\n   */\n  of(element, scope) {\n    return new Action(element, scope);\n  }\n};\n\nexport default Events = Events;\n\nif (window['TEST_MODE']) {\n  Utils.makeGlobal('pb.Events', Events);\n  Utils.makeGlobal('pb.Events.Action', Action);\n}\n","import Utils from 'src/utils';\n\n// Private symbols\nconst __lastDraggedEl__ = Symbol();\nconst __offsetX__ = Symbol();\nconst __offsetY__ = Symbol();\n\n/**\n * Service that keeps track of drag and drop.\n *\n * @class service.DragDrop\n */\nlet DragDrop = {\n\n  [__lastDraggedEl__]: null,\n\n  /**\n   * Start dragging the given element.\n   *\n   * @method dragStart\n   * @param {!Element} draggedEl The element that is dragged.\n   * @param {number} offsetX The x offset from the mouse cursor to the top left edge of the element\n   *     being dragged.\n   * @param {number} offsetY The y offset from the mouse cursor to the top left edge of the element\n   *     being dragged.\n   */\n  dragStart(draggedEl, offsetX, offsetY) {\n    this[__lastDraggedEl__] = draggedEl;\n    this[__offsetX__] = offsetX;\n    this[__offsetY__] = offsetY;\n    $(this).trigger(DragDrop.Events.LAST_DRAGGED_EL_CHANGED);\n  },\n\n  /**\n   * Ends the drag process.\n   *\n   * @method dragEnd\n   */\n  dragEnd() {\n    this[__lastDraggedEl__] = null;\n    this[__offsetX__] = undefined;\n    this[__offsetY__] = undefined;\n    $(this).trigger(DragDrop.Events.LAST_DRAGGED_EL_CHANGED);\n  },\n\n  /**\n   * Last element that was dragged.\n   *\n   * @property lastDraggedEl\n   * @type Element\n   * @readOnly\n   */\n  get lastDraggedEl() {\n    return this[__lastDraggedEl__];\n  },\n\n  /**\n   * The x offset from the mouse cursor to the top left edge of the element being dragged.\n   *\n   * @property offsetX\n   * @type number\n   * @readOnly\n   */\n  get offsetX() {\n    return this[__offsetX__];\n  },\n\n  /**\n   * The y offset from the mouse cursor to the top left edge of the element being dragged.\n   *\n   * @property offsetY\n   * @type number\n   * @readOnly\n   */\n  get offsetY() {\n    return this[__offsetY__];\n  }\n};\n\nDragDrop.Events = {\n  LAST_DRAGGED_EL_CHANGED: 'dragdrop-last_dragged_el_changed'\n};\n\nexport default DragDrop = DragDrop;\n\nUtils.makeGlobal('pb.service.DragDrop', DragDrop);\n","import Check  from 'src/check';\nimport Events from 'src/events';\nimport Utils  from 'src/utils';\n\nimport Ability from 'src/ability/ability';\n\nimport DragDropService from 'src/service/dragdrop';\n\n/**\n * Provides decorator to make an element draggable. Use [[Abilities|ability.Abilities]] to decorate\n * the element. Note that these methods should be called with the element to be decorated as the\n * scope.\n *\n * @class ability.Draggable\n * @extends ability.Ability\n */\n\n/**\n * Set to true to make this element draggable.\n * @attribute pb-draggable\n */\nconst ATTR_NAME = 'pb-draggable';\n\nconst CLASS_DRAGGED = 'pb-dragged';\n\n// Private symbols.\nconst __defaultValue__ = Symbol();\n\nconst __onDragEnd__ = Symbol();\nconst __onDragStart__ = Symbol('onDragStart');\nconst __register__ = Symbol();\nconst __unregister__ = Symbol();\n\nexport default class Draggable extends Ability {\n\n  /**\n   * @constructor\n   * @param {boolean} defaultValue Default value of the element. True iff the element should be\n   *     enabled by default.\n   */\n  constructor(defaultValue) {\n    this[__defaultValue__] = defaultValue;\n  }\n\n  /**\n   * Handler called when the dragging has ended.\n   *\n   * @method __onDragEnd__\n   * @param {!Element} el Element being dragged.\n   * @private\n   */\n  [__onDragEnd__](el) {\n    el.classList.remove(CLASS_DRAGGED);\n  }\n\n  /**\n   * Handler called when dragging has started.\n   *\n   * @method __onDragStart__\n   * @param {!Element} el Element being dragged.\n   * @param {!Event} event The drag start event.\n   * @private\n   */\n  [__onDragStart__](el, event) {\n    let dataTransfer = event.dataTransfer;\n    dataTransfer.effectAllowed = 'move';\n    el.classList.add(CLASS_DRAGGED);\n\n    let boundingRect = el.getBoundingClientRect();\n    DragDropService.dragStart(\n        this.getMovedElement(el),\n        event.clientX - boundingRect.left,\n        event.clientY - boundingRect.top);\n  }\n\n  /**\n   * Registers the handlers associated with this ability to the given element.\n   *\n   * @method __register__\n   * @param {!Element} element The element to register the handlers to.\n   * @private\n   */\n  [__register__](element) {\n    // Propagate the draggable attribute to the root element.\n    Utils.toArray(element.children).forEach(child => {\n      $(child).attr('draggable', 'true');\n      Events.of(child, this)\n          .listen('dragstart', this[__onDragStart__].bind(this, element))\n          .listen('dragend', this[__onDragEnd__].bind(this, element));\n    });\n  }\n\n  /**\n   * Unregisters the handlers associated with this ability from the given element.\n   *\n   * @method __unregister__\n   * @param {!Element} element The element to unregister the handlers from.\n   * @private\n   */\n  [__unregister__](element) {\n    Utils.toArray(element.children).forEach(child => {\n      Events.of(child, this).unlisten();\n      $(child).attr('draggable', null);\n    });\n  }\n\n  /**\n   * Sets the default value of the given element.\n   *\n   * @method setDefaultValue\n   * @param {!Element} el The element whose default value should be set.\n   */\n  setDefaultValue(el) {\n    if ($(el).attr(ATTR_NAME) === undefined) {\n      $(el).attr(ATTR_NAME, this[__defaultValue__]);\n    }\n  }\n\n  /**\n   * Handles attribute change.\n   *\n   * @method attributeChangedCallback\n   * @param {!Element} el The element whose attribute was changed.\n   * @param {string} name Name of the attribute that was changed.\n   * @param {string} oldValue Old value of the changed attribute.\n   * @param {string} newValue New value of the changed attribute.\n   */\n  attributeChangedCallback(el, name, oldValue, newValue) {\n    if (name === ATTR_NAME) {\n      newValue = Check(newValue).isBoolean(newValue).orThrows();\n      if (newValue) {\n        this[__register__](el);\n      } else {\n        this[__unregister__](el);\n      }\n    }\n  }\n\n  /**\n   * Handles registration when the element is attached to the document.\n   *\n   * @method attachedCallback\n   * @param {!Element} el The element that was attached.\n   */\n  attachedCallback(el) {\n    if ($(el).attr(ATTR_NAME) && Check($(el).attr(ATTR_NAME)).isBoolean().orThrows()) {\n      this[__register__](el);\n    }\n  }\n\n  /**\n   * Handles unregistration when the element is detached from the document.\n   *\n   * @method detachedCallback\n   * @param {!Element} el The element that was detached.\n   */\n  detachedCallback(el) {\n    this[__unregister__](el);\n  }\n\n  /**\n   * Returns the element that will be moved, if the given element were to be dragged and dropped.\n   *\n   * @method getMovedElement \n   * @param {!Element} el The element that is dragged.\n   * @return {!Element} The element that will be moved if the given element was dragged and dropped.\n   */\n  getMovedElement(el) {\n    return el;\n  }\n\n  /**\n   * The name of the ability. This is used as an ID to refer to the registered abilities.\n   * \n   * @property name\n   * @type string\n   * @readonly\n   */\n  get name() {\n    return ATTR_NAME;\n  }\n}\n\nif (window['TEST_MODE']) {\n  Utils.makeGlobal('pb.ability.Draggable', Draggable);\n}\n","import Check from 'src/check';\nimport Utils from 'src/utils';\n\nimport Ability from 'src/ability/ability';\n\n/**\n * Makes the component rotateable. This adds a transform rotateZ CSS rule to the component.\n * \n * @class ability.Rotateable\n * @extends ability.Ability\n */\n\n/**\n * Set to space separated numbers indicating the orientations, in degrees, that this element can \n * take. You can also set this to \"true\" to use the default set of orientations.\n *\n * @attribute pb-rotateable\n */\nconst ATTR_NAME = 'pb-rotateable';\n\n/**\n * This is the initial orientation index of the element. Set it to the index of the orientation \n * specified in pb-rotateable attribute.\n *\n * @attribute pb-rotateable\n */\nconst ATTR_INDEX = 'pb-orientation-index';\n\n// Private symbols.\nconst __defaultIndex__ = Symbol();\nconst __defaultOrientations__ = Symbol();\n\nconst __getOrientations__ = Symbol();\nconst __getOrientationIndex__ = Symbol();\nconst __setOrientationIndex__ = Symbol('setOrientationIndex');\n\nexport default class Rotateable extends Ability {\n\n  /**\n   * @constructor\n   * @param {Array.<number>} defaultOrientations Array of default orientations, in degrees.\n   * @param {number} defaultIndex The index of the default orientation.\n   */\n  constructor(defaultOrientations = [0], defaultIndex = 0) {\n    this[__defaultIndex__] = defaultIndex;\n    this[__defaultOrientations__] = defaultOrientations.join(' ');\n  }\n\n  /**\n   * @method __getOrientations__\n   * @param {!Element} el The Element to get the possible orientations of.\n   * @return {Array.<number>} Array of possible orientations that the given element can take, in\n   *    degrees.\n   * @private\n   */\n  [__getOrientations__](el) {\n    return $(el).attr(ATTR_NAME).split(' ')\n        .map(str => Check(str).isInt().orUse(undefined))\n        .filter(value => Number.isInteger(value));\n  }\n\n  /**\n   * @method __getOrientationIndex__\n   * @param {!Element} el The Element to get the orientation index of.\n   * @return {number} The index of orientation relative to the array returned by \n   *    __getOrientations__.\n   * @private\n   */\n  [__getOrientationIndex__](el) {\n    return Check($(el).attr(ATTR_INDEX)).isInt().orThrows();\n  }\n\n  /**\n   * Sets the orientation index of the given element to the given value. This only updates\n   * the pb-orientation-index attribute value.\n   *\n   * @method  __setOrientationIndex__\n   * @param {!Element} el The Element to set the orientation index of.\n   * @param {number} index The orientation index to set to\n   * @private\n   */\n  [__setOrientationIndex__](el, index) {\n    let orientations = this[__getOrientations__](el);\n    if (orientations.length > 0) {\n      if (index < 0) {\n        index = -(-index % orientations.length);\n        index += orientations.length;\n      } \n\n      if (index >= orientations.length) {\n        index %= orientations.length;\n      }\n\n      $(el).attr(ATTR_INDEX, index);\n    }\n  }\n\n  /**\n   * Sets the default value of the given element.\n   *\n   * @method setDefaultValue\n   * @param {!Element} el The element whose default value should be set.\n   */\n  setDefaultValue(el) {\n    if ($(el).attr(ATTR_NAME) === undefined || $(el).attr(ATTR_NAME) === 'true') {\n      $(el).attr(ATTR_NAME, this[__defaultOrientations__]);\n    }\n\n    if ($(el).attr(ATTR_INDEX) === undefined) {\n      $(el).attr(ATTR_INDEX, this[__defaultIndex__]);\n    }\n  }\n\n  /**\n   * Handles attribute change.\n   *\n   * @method attributeChangedCallback\n   * @param {!Element} el The element whose attribute was changed.\n   * @param {string} name Name of the attribute that was changed.\n   * @param {string} oldValue Old value of the changed attribute.\n   * @param {string} newValue New value of the changed attribute.\n   */\n  attributeChangedCallback(el, name, oldValue, newValue) {\n    if (name === ATTR_NAME) {\n      // Refreshes the orientation index.\n      this[__setOrientationIndex__](el, this[__getOrientationIndex__](el));\n    }\n\n    if (name === ATTR_INDEX) {\n      let orientation = this[__getOrientations__](el)[Check(newValue).isInt().orThrows()];\n      el.style.transform = `rotateZ(${orientation}deg)`;\n    }\n  }\n\n  /**\n   * Change the orientation of the element.\n   *\n   * @method trigger\n   * @param {!Element} el The element to trigger the ability on.\n   */\n  trigger(el) {\n    this[__setOrientationIndex__](el, this[__getOrientationIndex__](el) + 1);\n  }\n\n  /**\n   * The name of the ability. This is used as an ID to refer to the registered abilities.\n   * \n   * @property name\n   * @type string\n   * @readonly\n   */\n  get name() {\n    return ATTR_NAME;\n  }\n}\n\nif (window['TEST_MODE']) {\n  Utils.makeGlobal('pb.ability.Rotateable', Rotateable);\n}","import Check from 'src/check';\nimport Utils from 'src/utils';\n\nimport Ability from 'src/ability/ability';\n\n/**\n * Provides decorator to make an element toggleable between two states.\n * \n * @class ability.Toggleable\n * @extends ability.Ability\n */\n\n/**\n * Set to true to make this element toggleable.\n * \n * @attribute pb-toggleable\n */\nconst ATTR_NAME = 'pb-toggleable';\n\n/**\n * Set to true to show the front side of the element, however front is defined.\n *\n * @attribute pb-showfront\n */\nconst ATTR_SHOWFRONT = 'pb-showfront';\n\n// Private symbols.\nconst __defaultEnabled__ = Symbol();\nconst __defaultShowFront__ = Symbol();\n\nconst __isEnabled__ = Symbol();\nconst __isShowFront__ = Symbol();\n\nexport default class Toggleable extends Ability {\n\n  /**\n   * @constructor\n   * @param {boolean} defaultEnabled True iff the element registered to this ability will have\n   *     this ability enabled by default.\n   * @param {boolean} defaultShowFront True iff the element registered to this ability will\n   *     show the front side by default.\n   */\n  constructor(defaultEnabled = true, defaultShowFront = false) {\n    this[__defaultEnabled__] = defaultEnabled;\n    this[__defaultShowFront__] = defaultShowFront;\n  }\n\n  /**\n   * @method __isEnabled__\n   * @param {!Element} el Element to check.\n   * @return {boolean} True iff the ability is enabled for the given element.\n   * @private\n   */\n  [__isEnabled__](el) {\n    return Check($(el).attr(ATTR_NAME)).isBoolean().orThrows();\n  }\n\n  /**\n   * @method __isShowFront__\n   * @param {!Element} el Element to check.\n   * @return {boolean} True iff the element is currently showing the \"front\" side.\n   * @private\n   */\n  [__isShowFront__](el) {\n    return Check($(el).attr(ATTR_SHOWFRONT)).isBoolean().orThrows();\n  }\n\n  /**\n   * Sets the default value of the given element.\n   *\n   * @method setDefaultValue\n   * @param {!Element} el The element whose default value should be set.\n   */\n  setDefaultValue(el) {\n    if ($(el).attr(ATTR_NAME) === undefined) {\n      $(el).attr(ATTR_NAME, this[__defaultEnabled__]);\n    }\n\n    if ($(el).attr(ATTR_SHOWFRONT) === undefined) {\n      $(el).attr(ATTR_SHOWFRONT, this[__defaultShowFront__]);\n    }\n  }\n\n  /**\n   * Toggles the state of the element.\n   *\n   * @method trigger\n   * @param  {!Element} el Element to toggle the state of.\n   */\n  trigger(el) {\n    if (this[__isEnabled__](el)) {\n      $(el).attr(ATTR_SHOWFRONT, !this[__isShowFront__](el));\n    }\n  }\n\n  /**\n   * The name of the ability. This is used as an ID to refer to the registered abilities.\n   * \n   * @property name\n   * @type string\n   * @readonly\n   */\n  get name() {\n    return ATTR_NAME;\n  }\n}\n\nif (window['TEST_MODE']) {\n  Utils.makeGlobal('pb.ability.Toggleable', Toggleable);\n}","import Utils  from 'src/utils';\n\nimport Ability from 'src/ability/ability';\n\n/**\n * Provides decorator to show context menu on an element. To use this, pass a configuration object\n * into the constructor. The configuration object determines the structure of the menu. The key of\n * the object is the label to be shown on the menu. The value can be any of the following:\n * - [[ability.Ability|ability.Ability]] object: This will display the label as a menu item which \n *   triggers the ability when clicked.\n * - `undefined`: This will display a horizontal line. The label's value is ignored.\n * - Configuration object: This will use the label as a menu item to open a submenu specified by the\n *   given configuration.\n *\n * TODO(gs): Maybe change the config to take an array of objects?\n *\n * @class ability.Contextable\n * @extends ability.Ability\n */\n\n// Private symbols.\nconst __abilities__ = Symbol();\nconst __menuEl__ = Symbol('menuEl');\n\nconst __createMenuEl__ = Symbol();\nconst __currentEl__ = Symbol('currentEl');\nconst __onHide__ = Symbol();\nconst __onShow__ = Symbol();\nconst __trigger__ = Symbol();\n\nexport default class Contextable extends Ability {\n\n  /**\n   * @constructor\n   * @param {Object} config The configuration object to describe the menu. See the class'\n   *    description for this.\n   */\n  constructor(config) {\n    this[__menuEl__] = this[__createMenuEl__](config);\n    this[__currentEl__] = null;\n  }\n\n  /**\n   * Creates a menu element based on the given configuration. See the class' description for the\n   * format of the configuration.\n   *\n   * @method __createMenuEl__\n   * @param {!Object} config The configuration object used to create a menu element.\n   * @return {!Element} The menu element created based on the configuration object.\n   * @private\n   */\n  [__createMenuEl__](config) {\n    let menuEl = document.createElement('menu');\n    $(menuEl).attr('type', 'context');\n\n    for (let label in config) {\n      let value = config[label];\n      let child = null;\n      if (value instanceof Ability) {\n        // Create a simple menu item.\n        child = document.createElement('menuitem');\n        $(child).attr('label', label);\n        child.addEventListener('click', this[__trigger__].bind(this, value));\n      } else if (value === undefined) {\n        // Create a horizontal line.\n        child = document.createElement('hr');\n      } else if (value instanceof Object) {\n        // Create a submenu.\n        child = this[__createMenuEl__](value);\n        $(child).attr('label', label);\n      } else {\n        throw `Item with label ${label} is invalid`;\n      }\n\n      menuEl.appendChild(child);\n    }\n    return menuEl;\n  }\n\n  /**\n   * Triggers the given ability on the current element.\n   * \n   * @method __trigger__\n   * @param {ability.Ability} ability The ability to trigger.\n   * @private\n   */\n  [__trigger__](ability) {\n    ability.trigger(this[__currentEl__]);\n  }\n\n  /**\n   * Handles event called when the context menu is shown.\n   * \n   * @method __onShow__\n   * @param {!Object} config The configuration object passed into jQuery's contextMenu.\n   * @private\n   */\n  [__onShow__](config) {\n    this[__currentEl__] = config['pb-el'];\n  }\n\n  /**\n   * Handles event called when the context menu is hidden.\n   *\n   * @method __onHide__\n   * @private\n   */\n  [__onHide__]() {\n    this[__currentEl__] = null;\n  }\n\n  /**\n   * Creates the context menu and append it to the element.\n   *\n   * @method setDefaultValue\n   * @param {!Element} el The element whose default value should be set.\n   */\n  setDefaultValue(el) {\n    let tmpId = Math.random();\n    // TODO(gs): Hack since the plugin only accepts CSS selector\n    $(el).attr('pb-id', tmpId);\n    $.contextMenu({\n      className: 'pb-contextable',\n      selector: `[pb-id=\"${tmpId}\"]`,\n      items: $.contextMenu.fromMenu(this[__menuEl__]),\n      events: {\n        show: this[__onShow__].bind(this),\n        hide: this[__onHide__].bind(this)\n      },\n      'pb-el': el\n    });\n\n    // TODO(gs): Disable item if ability is disabled.\n  }\n\n  /**\n   * Name of the ability.\n   * \n   * @property name\n   * @type string\n   * @readonly\n   */\n  get name() {\n    return 'pb-contextable';\n  }\n}\n\nif (window['TEST_MODE']) {\n  Utils.makeGlobal('pb.ability.Contextable', Contextable);\n}\n","import Utils from 'src/utils';\n\n/**\n * Base class of all ProtoBoard elements.\n * \n * @class PbElement\n * @extends HTMLElement\n */\nexport default class PbElement extends HTMLElement {\n\n  createdCallback() {\n    /**\n     * True iff the element has been created and attached.\n     *\n     * @type boolean\n     * @property isCreated\n     */\n    this.isCreated = false;\n  }\n\n  attachedCallback() {\n    this.isCreated = true;\n  }\n\n  detachedCallback() { }\n}\n\nUtils.makeGlobal('pb.PbElement', PbElement);\n","$traceurRuntime.defaultSuperCall(this,\n                $__placeholder__0.prototype, arguments)","import Utils from 'src/utils';\nimport DragDropService from 'src/service/dragdrop';\nimport PbElement from 'src/pbelement';\n\n/**\n * Base class for all components.\n *\n * @class component.Component\n * @extends PbElement  \n */\nexport default class Component extends PbElement {\n\n  /**\n   * For testing only.\n   */\n  constructor() { }\n\n  createdCallback() {\n    super.createdCallback();\n  }\n}\n\nif (window.TEST_MODE) {\n  Utils.makeGlobal('pb.component.Component', Component);\n}\n","$traceurRuntime.superCall($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                   $__placeholder__3)","import Utils from 'src/utils';\n\nimport Component from 'src/component/component';\n\nimport Abilities   from 'src/ability/abilities';\nimport Contextable from 'src/ability/contextable';\nimport Draggable   from 'src/ability/draggable';\nimport Rotateable  from 'src/ability/rotateable';\nimport Toggleable  from 'src/ability/toggleable';\n\n/**\n * A representation of a card. To use this, create a `pb-c-card` element with two child elements:\n * - One must have a `pb-front` class. This is the front face of the card.\n * - One must have a `pb-back` class. This is the back face of the card.\n *\n * By default, the card starts by showing its back. If you want to make it start by showing the \n * front face, add `pb-showfront=\"true\"` to the `pb-c-card`.\n *\n * ```html\n * <!-- Example: Create a card that starts by displaying its front side -->\n * <pb-c-card pb-showfront=\"true\">\n *   <div class=\"pb-front\">Front side</div>\n *   <div class=\"pb-back\">Back side</div>\n * </pb-c-card>\n * ```\n *\n * Supported abilities:\n * - [[Draggable|ability.Draggable]]: Default enabled.\n * - [[Toggleable|ability.Toggleable]]: Default enabled on click.\n * - [[Rotateable|ability.Rotateable]]: Default disabled.\n * \n * @class component.Card\n * @extends component.Component\n */\n\nlet doc = null;\nlet template = null;\n\nconst EL_NAME = 'pb-c-card';\n\nexport default class Card extends Component {\n\n  /**\n   * Called when the element is created\n   *\n   * @method createdCallback\n   */\n  createdCallback() {\n    super.createdCallback();\n    this.createShadowRoot()\n        .appendChild(Utils.activateTemplate(template, doc));\n    this.attachedCallback();\n  }\n\n  /**\n   * Registers `pb-c-card` to the document.\n   *\n   * @method register\n   * @static\n   * @param {!Document} currentDoc The document object to register the element to.\n   * @param {!Element} cardTemplate The template for the pb-c-card's element shadow DOM.\n   */\n  static register(currentDoc, cardTemplate) {\n    if (!doc && !template) {\n      let toggleable = new Toggleable(true);\n      let rotateable = new Rotateable();\n      let draggable = new Draggable(true);\n      document.registerElement(EL_NAME,  {\n        prototype: Abilities.config(\n            Card,\n            {\n              'pb-click': toggleable\n            },\n            draggable,\n            rotateable,\n            new Contextable({\n              'Flip': toggleable,\n              '-': undefined,\n              'sub': {\n                'Flip': toggleable,\n                'Tap / Untap': rotateable\n              }\n            })).prototype\n      });\n    }\n\n    doc = currentDoc;\n    template = cardTemplate;\n  }\n}\n\nUtils.makeGlobal('pb.component.Card', Card);\n","import Component from 'src/component/component';\nimport Utils from 'src/utils';\nimport Abilities from 'src/ability/abilities';\nimport Draggable from 'src/ability/draggable';\n\nlet doc = null;\nlet template = null;\n\nconst EL_NAME = 'pb-c-token';\n\n/**\n * A simple movable component with only one state. Examples of token:\n * - Chess piece\n * - Cubes\n * - Damage marker\n *\n * To use this, create a `pb-c-token` element with one child element. This child element will be\n * displayed as the token.\n *\n * ```html\n * <!-- Example: A square token -->\n * <pb-c-token>\n *   <div style=\"background: red; width: 50px; height: 50px;\"></div>\n * <pb-c-token>\n * ```\n *\n * Supported abilities:\n *\n * @class component.Token\n * @extends component.Component\n */\nexport default class Token extends Component {\n\n  createdCallback() {\n    super.createdCallback();\n    this.createShadowRoot().appendChild(Utils.activateTemplate(template, doc));\n  }\n\n  /**\n   * Registers `pb-c-token` to the document.\n   *\n   * @method register\n   * @static\n   * @param {!Document} currentDoc The document object to register the element to.\n   * @param {!Element} tokenTemplate The template for the `pb-c-token`'s shadow DOM.\n   */\n  static register(currentDoc, tokenTemplate) {\n    if (doc || template) {\n      // Registration has already happened.\n      return;\n    }\n\n    doc = currentDoc;\n    template = tokenTemplate;\n    document.registerElement(EL_NAME, {\n      prototype: Abilities.config(\n          Token,\n          {},\n          new Draggable(true)).prototype\n    });\n  }\n}\n\nUtils.makeGlobal('pb.component.Token', Token);\n","import Check  from 'src/check';\nimport Events from 'src/events';\nimport Utils  from 'src/utils';\n\nimport Ability from 'src/ability/ability';\n\nimport DragDrop from 'src/service/dragdrop';\n\n/**\n * Provides decorator to make an element be a drop target for drag and drop.\n * \n * @class ability.Droppable\n * @extends ability.Ability\n */\n\n/**\n * Set to true to make it possible to drop elements into this element.\n * @attribute pb-droppable\n */\nconst ATTR_NAME = 'pb-droppable';\nconst CLASS_OVER = 'pb-over';\n\n// Private symbols.\nconst __defaultValue__ = Symbol();\nconst __dragEnterCount__ = Symbol();\n\nconst __onDragEnter__ = Symbol('onDragEnter');\nconst __onDragLeave__ = Symbol();\nconst __onDragOver__ = Symbol();\nconst __onLastDraggedElChange__ = Symbol('onLastDraggedElChange');\nconst __register__ = Symbol('register');\nconst __unregister__ = Symbol('unregister');\n\nexport default class Droppable extends Ability {\n\n  /**\n   * @constructor\n   * @param {boolean} defaultValue True iff the ability should be enabled.\n   */\n  constructor(defaultValue) {\n    this[__defaultValue__] = defaultValue;\n    this[__dragEnterCount__] = 0;\n  }\n\n  /**\n   * Handler called when an element has entered the given element.\n   *\n   * @method __onDragEnter__\n   * @param {!Element} el The element that is being entered.\n   * @private\n   */\n  [__onDragEnter__](el) {\n    el.classList.add(CLASS_OVER);\n    this[__dragEnterCount__]++;\n  }\n\n  /**\n   * Handler called when an element has left the given element.\n   * \n   * @method __onDragLeave__\n   * @param {!Element} el The element being left behind.\n   * @private\n   */\n  [__onDragLeave__](el) {\n    this[__dragEnterCount__]--;\n    if (this[__dragEnterCount__] <= 0) {\n      this[__dragEnterCount__] = 0;\n      el.classList.remove(CLASS_OVER);\n    }\n  }\n\n  /**\n   * Handler called when an element is dragged over the given element.\n   *\n   * @method __onDragOver__\n   * @param {!Element} el The element where another element is dragged over it.\n   * @param {!Event} event The event object.\n   * @private\n   */\n  [__onDragOver__](el, event) {\n    event.preventDefault();\n    event.dropEffect = 'move';\n  }\n\n  /**\n   * Handler called when the last element being dragged has changed.\n   *\n   * @method __onLastDraggedElChange__\n   * @param {!Element} el The element that this ability is registered to.\n   * @private\n   */\n  [__onLastDraggedElChange__](el) {\n    if (!DragDrop.lastDraggedEl) {\n      this[__dragEnterCount__] = 0;\n      el.classList.remove(CLASS_OVER);\n    }\n  }\n\n  /**\n   * Registers the handlers for this ability to the given element.\n   *\n   * @method __register__\n   * @param {!Element} el The element to register the ability to.\n   * @private\n   */\n  [__register__](el) {\n    Events.of(el, this)\n        .listen('dragover', this[__onDragOver__].bind(this, el))\n        .listen('dragenter', this[__onDragEnter__].bind(this, el))\n        .listen('dragleave', this[__onDragLeave__].bind(this, el))\n        .listen('drop', this.trigger.bind(this, el));\n\n    Events.of(DragDrop, this)\n        .on(\n            DragDrop.Events.LAST_DRAGGED_EL_CHANGED, \n            this[__onLastDraggedElChange__].bind(this, el));\n  }\n\n  [__unregister__](el) {\n    Events.of(el, this).unlisten();\n    Events.of(DragDrop, this).off();\n  }\n\n  /**\n   * Sets the default value of the given element.\n   *\n   * @method setDefaultValue\n   * @param {!Element} el The element whose default value should be set.\n   */\n  setDefaultValue(el) {\n    if ($(el).attr(ATTR_NAME) === undefined) {\n      $(el).attr(ATTR_NAME, this[__defaultValue__]);\n    }\n  }\n\n  /**\n   * Handles attribute change.\n   *\n   * @method attributeChangedCallback\n   * @param {!Element} el The element whose attribute was changed.\n   * @param {string} name Name of the attribute that was changed.\n   * @param {string} oldValue Old value of the changed attribute.\n   * @param {string} newValue New value of the changed attribute.\n   */\n  attributeChangedCallback(el, name, oldValue, newValue) {\n    if (name === ATTR_NAME) {\n      newValue = Check(newValue).isBoolean(newValue).orThrows();\n      if (newValue) {\n        this[__register__](el);\n      } else {\n        this[__unregister__](el);\n      }\n    }\n  }\n\n  /**\n   * Handles registration when the element is attached to the document.\n   *\n   * @method attachedCallback\n   * @param {!Element} el The element that was attached.\n   */\n  attachedCallback(el) {\n    if ($(el).attr(ATTR_NAME) && Check($(el).attr(ATTR_NAME)).isBoolean().orThrows()) {\n      this[__register__](el);\n    }\n  }\n\n  /**\n   * Handles unregistration when the element is detached from the document.\n   *\n   * @method detachedCallback\n   * @param {!Element} el The element that was detached.\n   */\n  detachedCallback(el) {\n    this[__unregister__](el);\n  }\n\n  /**\n   * Returns the element that will be moved, if the given element were to be dragged and dropped.\n   *\n   * @method  getMovedElement \n   * @param  {!Element} el The element that is dragged.\n   * @return {!Element} The element that will be moved if the given element was dragged and dropped.\n   */\n  getMovedElement(el) {\n    return el;\n  }\n\n  /**\n   * Drop the last dragged element on the given element\n   *\n   * @method trigger\n   * @param {!Element} el The element to drop the dragged element into.\n   * @param {!Event} event Event object that triggered the call.\n   */\n  trigger(el, event) {\n    el.classList.remove(CLASS_OVER);\n\n    let lastDraggedEl = DragDrop.lastDraggedEl;\n    if (lastDraggedEl) {\n      el.appendChild(lastDraggedEl);\n\n      // TODO(gs): attached callback doesn't seem to be called on appendChild.\n      // https://github.com/webcomponents/webcomponentsjs/issues/18\n      if (DragDrop.lastDraggedEl.attachedCallback) {\n        DragDrop.lastDraggedEl.attachedCallback();\n      }\n    }\n    DragDrop.dragEnd();\n  }\n\n  /**\n   * The name of the ability. This is used as an ID to refer to the registered abilities.\n   * \n   * @property name\n   * @type string\n   * @readonly\n   */\n  get name() {\n    return ATTR_NAME;\n  }\n}\n\nif (window['TEST_MODE']) {\n  Utils.makeGlobal('pb.ability.Droppable', Droppable);\n}","import Utils from 'src/utils';\n\nlet source = null;\n\nconst CLASS_DISTRIBUTE = 'pb-distribute';\n\n/**\n * Service that manages the distributing action.\n *\n * @class service.Distribute\n * @static\n */\nlet Distribute = {\n\n  /**\n   * Starts the distribution action.\n   *\n   * @method begin\n   * @param {!Bag} distributeSource Source to distribute the elements from.\n   */\n  begin(distributeSource) {\n    if (!this.isActive()) {\n      source = distributeSource;\n      distributeSource.classList.add(CLASS_DISTRIBUTE);\n      $(this).trigger(this.EventType.BEGIN);\n    }\n  },\n\n  /**\n   * Ends the distribution process.\n   *\n   * @method end\n   */\n  end() {\n    if (this.isActive()) {\n      source.classList.remove(CLASS_DISTRIBUTE);\n      source = null;\n      $(this).trigger(this.EventType.END);\n    }\n  },\n\n  /**\n   * @method isActive\n   * @return {boolean} True iff the distribution is active.\n   */\n  isActive() {\n    return source !== null;\n  },\n\n  /**\n   * @method next\n   * @return {Element} The first child of the distribution source.\n   */\n  next() {\n    return source.next();\n  },\n\n  EventType: {\n    /**\n     * Event type dispatched when the distribution is starting.\n     *\n     * @type string\n     * @property EventType.BEGIN\n     */\n    BEGIN: 'distribute-begin',\n\n    /**\n     * Event type dispatched when the distribution is ending.\n     *\n     * @type string\n     * @property EventType.END\n     */\n    END: 'distribute-end'\n  }\n};\n\n$(window).on('keydown', event => {\n  // Check if this is ESC key.\n  if (event.which === 27 && Distribute.isActive()) {\n    Distribute.end();\n  }\n});\n\nexport default Distribute = Distribute;\n\nUtils.makeGlobal('pb.service.Distribute', Distribute);","import Events    from 'src/events';\nimport PbElement from 'src/pbelement';\nimport Utils     from 'src/utils';\n\nimport Distribute from 'src/service/distribute';\nimport DragDrop   from 'src/service/dragdrop';\n\nconst CLASS_DISTRIBUTE = 'pb-distribute';\n\n// TODO(gs): Make Distributable\n\n// Private symbols\nconst __onClick__ = Symbol();\nconst __onDistributeBegin__ = Symbol();\nconst __onDistributeEnd__ = Symbol();\n\n/**\n * Base class of all regions. All regions are drop targets.\n * @class region.Region\n * @extends HTMLElement\n */\nexport default class Region extends PbElement {\n\n  /** For testing only */\n  constructor() { }\n\n  [__onClick__]() {\n    if (Distribute.isActive() && Distribute.next()) {\n      this.appendChild(Distribute.next());\n    }\n  }\n\n  [__onDistributeBegin__]() {\n    if (this.shadowRoot) {\n      this.shadowRoot.querySelector('#root').classList.add(CLASS_DISTRIBUTE);\n    }\n  }\n\n  [__onDistributeEnd__]() {\n    if (this.shadowRoot) {\n      this.shadowRoot.querySelector('#root').classList.remove(CLASS_DISTRIBUTE);\n    }\n  }\n\n  createdCallback() {\n    super.createdCallback();\n  }\n\n  attachedCallback() {\n    super.attachedCallback();\n    Events.of(this, this).listen('click', this[__onClick__].bind(this));\n\n    $(Distribute)\n        .on(Distribute.EventType.BEGIN, this[__onDistributeBegin__].bind(this))\n        .on(Distribute.EventType.END, this[__onDistributeEnd__].bind(this));\n  }\n\n  detachedCallback() {\n    Events.of(this, this).unlisten();\n  }\n}\n\n/**\n * Refers to pb-droppable attribute\n *\n * @type string\n * @property ATTR_DROPPABLE\n * @static\n */\n\n/**\n * If set to true, this will be droppable for any kind of elements.\n * If set to false, this will not be droppable.\n * Otherwise, the string will be treated as a selector for elements that can be dropped into this\n * element. \n *\n * @attribute pb-droppable\n */\nRegion.ATTR_DROPPABLE = 'pb-droppable';\n\nif (window.TEST_MODE) {\n  Utils.makeGlobal('pb.region.Region', Region);\n}","import Utils     from 'src/utils';\n\nimport Abilities from 'src/ability/abilities';\nimport Draggable from 'src/ability/draggable';\nimport Droppable from 'src/ability/droppable';\n\nimport Region    from 'src/region/region';\n\n/**\n * A collection of components. You cannot see the component until you drag one out of it.\n *\n * To make a bag, create a `pb-r-bag` element. You can override the content of the placeholder by\n * creating a child element with a `pb-placeholder-content` attribute. This element will be used for\n * the placeholder content.\n * \n * @class region.Bag\n * @extends region.Region\n */\n\nconst EL_NAME = 'pb-r-bag';\nconst ATTR_PLACEHOLDER = 'pb-placeholder';\nconst ATTR_PLACEHOLDER_CONTENT = 'pb-placeholder-content';\n\n// Private symbols\nconst __bag__ = Symbol();\nconst __draggable__ = Symbol('draggable');\nconst __placeHolderEl__ = Symbol('placeHolderEl');\n\nlet doc = null;\nlet template = null;\nlet placeHolderTmp = null;\n\n\nclass BagDraggable extends Draggable {\n\n  constructor(bag) {\n    super(true);\n    this[__bag__] = bag;\n  }\n\n  getMovedElement(el) {\n    let candidates = Utils.toArray(this[__bag__].children).filter(\n        child => $(child).attr(ATTR_PLACEHOLDER) === undefined);\n    return candidates[Math.round(Math.random() * (candidates.length - 1))];\n  }\n}\n\nexport default class Bag extends Region {\n\n  /**\n   * Called when the element is created.\n   *\n   * @method createdCallback\n   */\n  createdCallback() {\n    super.createdCallback();\n    this.createShadowRoot().appendChild(Utils.activateTemplate(template, doc));\n\n    this[__placeHolderEl__] = this.querySelector(`[${ATTR_PLACEHOLDER}]`);\n\n    if (!this[__placeHolderEl__]) {\n      let placeHolderContent = this.querySelector(`[${ATTR_PLACEHOLDER_CONTENT}]`) ||\n          Utils.activateTemplate(placeHolderTmp, doc);\n\n      this[__placeHolderEl__] = doc.createElement('div');\n      this[__placeHolderEl__].appendChild(placeHolderContent);\n      $(this[__placeHolderEl__]).attr(ATTR_PLACEHOLDER, '');\n      this.insertBefore(this[__placeHolderEl__], this.lastChild);\n    }\n\n    this[__draggable__] = new BagDraggable(this);\n    this[__draggable__].setDefaultValue(this[__placeHolderEl__]);\n\n    this.attachedCallback();\n  }\n\n  /**\n   * Called when the element is attached to the document.\n   *\n   * @method attachedCallback\n   */\n  attachedCallback() {\n    super.attachedCallback();\n    this[__draggable__].attachedCallback(this[__placeHolderEl__]);\n  }\n\n  /**\n   * Called when the element is detached from the document.\n   *\n   * @method detachedCallback\n   */\n  detachedCallback() {\n    this[__draggable__].detachedCallback(this[__placeHolderEl__]);\n    super.detachedCallback();\n  }\n\n  /**\n   * Called when the element's attribute has changed\n   *\n   * @method attributeChangedCallback\n   * @param  {string} name The name of the changed attribute.\n   * @param  {string} oldValue The old value of the attribute.\n   * @param  {string} newValue The new value of the attribute.\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    this[__draggable__].attributeChangedCallback(this[__placeHolderEl__], name, oldValue, newValue);\n  }\n  \n  /**\n   * Registers `pb-r-bag` to the document.\n   *\n   * @method register\n   * @static\n   * @param  {!Document} currentDoc The document object to register the element to.\n   * @param  {!Element} bagTemplate The template for the pb-r-bag's element DOM.\n   * @return {[type]} [description]\n   */\n  static register(currentDoc, bagTemplate, placeHolderTemplate) {\n    if (!doc || !template) {\n      doc = currentDoc;\n      template = bagTemplate;\n      placeHolderTmp = placeHolderTemplate;\n    }\n\n    document.registerElement(EL_NAME, {\n      prototype: Abilities.config(\n          Bag,\n          {},\n          new Droppable(true)).prototype\n    });\n  } \n}\n\nBag.prototype[__draggable__] = null;\nBag.prototype[__placeHolderEl__] = null;\n\nUtils.makeGlobal('pb.region.Bag', Bag);\n\nif (window['TEST_MODE']) {\n  Utils.makeGlobal('pb.region.Bag.BagDraggable', BagDraggable);\n}","import Check from 'src/check';\nimport Utils from 'src/utils';\n\nimport Ability from 'src/ability/ability';\n\n/**\n * Provides decorator to make the component be able to shuffle the child elements.\n * \n * @class ability.Shuffleable\n * @extends ability.Ability\n */\n\n/**\n * Set to true to enable this element to be shuffleable.\n *\n * @attribute pb-shuffleable\n */\nconst ATTR_NAME = 'pb-shuffleable';\n\n// Private symbols.\nconst __defaultEnabled__ = Symbol();\n\nexport default class Shuffleable extends Ability {\n\n  /**\n   * @constructor\n   * @param {boolean=} defaultEnabled True iff this ability should be enabled by default. Defaults\n   *     to true.\n   */\n  constructor(defaultEnabled = true) {\n    this[__defaultEnabled__] = defaultEnabled;\n  }\n\n  /**\n   * Sets the default value of the given element.\n   *\n   * @method setDefaultValue\n   * @param {!Element} el The element whose default value should be set.\n   */\n  setDefaultValue(el) {\n    if ($(el).attr(ATTR_NAME) === undefined) {\n      $(el).attr(ATTR_NAME, this[__defaultEnabled__]);\n    }\n  }\n\n  /**\n   * Shuffles the children of the given element.\n   *\n   * @method trigger\n   * @param {!Element} el The element whose children should be shuffled.\n   */\n  trigger(el) {\n    if (Check($(el).attr(ATTR_NAME)).isBoolean().orThrows()) {\n      let pairs = Utils.toArray(el.children).map(child => [child, Math.random()]);\n      pairs.sort((a, b) => Utils.compare(a[1], b[1]));\n\n      let shuffled = pairs.map(pair => pair[0]);\n      shuffled.forEach(shuffledEl => el.appendChild(shuffledEl));\n    }\n  }\n\n  /**\n   * The name of the ability. This is used as an ID to refer to the registered abilities.\n   * \n   * @property name\n   * @type string\n   * @readonly\n   */\n  get name() {\n    return ATTR_NAME;\n  }\n}\n\nUtils.makeGlobal('pb.ability.Shuffleable', Shuffleable);","import Events from 'src/events';\nimport Utils  from 'src/utils';\n\nimport Abilities   from 'src/ability/abilities';\nimport Droppable   from 'src/ability/droppable';\nimport Shuffleable from 'src/ability/shuffleable';\nimport Triggerable from 'src/ability/triggerable';\n\nimport Region from 'src/region/region';\n\nlet doc = null;\nlet template = null;\n\nconst EL_NAME = 'pb-r-deck';\n\n/**\n * Represents a collection of items that can be sorted. To use this, create a `pb-r-deck` element.\n * Any child elements of this class are considered to be in the deck.\n *\n * @class region.Deck\n * @extends region.Region\n */\nexport default class Deck extends Region {\n\n  createdCallback() {\n    super.createdCallback();\n    this.createShadowRoot().appendChild(Utils.activateTemplate(template, doc));\n    this.attachedCallback();\n  }\n\n  /**\n   * Called when the element is attached to the document.\n   *\n   * @method attachedCallback\n   */\n  attachedCallback() {\n    super.attachedCallback();\n  }\n\n  /**\n   * Called when the element is detached from the document.\n   *\n   * @method detachedCallback\n   */\n  detachedCallback() {\n    super.detachedCallback();\n  }\n\n  /**\n   * Registers `pb-r-deck` to the document.\n   *\n   * @method register\n   * @static\n   * @param {!Document} currentDoc The document object to register the element to.\n   * @param {!Element} deckTemplate The template for the `pb-r-deck`'s element shadow DOM.\n   */\n  static register(currentDoc, deckTemplate) {\n    if (!doc || !template) {\n      doc = currentDoc;\n      template = deckTemplate;\n    }\n\n    document.registerElement(EL_NAME, {\n      prototype: Abilities.config(\n          Deck,\n          {\n            [Triggerable.TYPES.DOUBLE_CLICK]: new Shuffleable(true)\n          },\n          new Droppable(true)).prototype\n    });\n  }\n}\n\nUtils.makeGlobal('pb.region.Deck', Deck);\n","import Utils from 'src/utils';\n\nimport Abilities from 'src/ability/abilities';\nimport Droppable from 'src/ability/droppable';\n\nimport Region from 'src/region/region';\n\nimport DragDrop from 'src/service/dragdrop';\n\nlet doc = null;\nlet template = null;\n\nconst EL_NAME = 'pb-r-rect';\n\n/**\n * An arbitrary rectangular region. You can position elements anywhere in this region.\n *\n * @class region.Rect\n * @extends region.Region\n */\n\nclass SmartDroppable extends Droppable {\n\n  constructor(defaultValue) {\n    super(defaultValue);\n  }\n\n  /**\n   * Drop the last dragged element on the given element\n   *\n   * @method trigger\n   * @param {!Element} el The element to drop the dragged element into.\n   * @param {!Event} event Event object that triggered the call.\n   */\n  trigger(el, event) {\n    el.classList.remove('pb-over');\n    let lastDraggedEl = DragDrop.lastDraggedEl;\n    if (!lastDraggedEl) {\n      return;\n    }\n    el.appendChild(lastDraggedEl);\n\n    let screenCoord = lastDraggedEl.getBoundingClientRect();\n    let dLeft = event.clientX - screenCoord.left - DragDrop.offsetX;\n    let dTop = event.clientY - screenCoord.top - DragDrop.offsetY;\n    lastDraggedEl.style.left = `${lastDraggedEl.offsetLeft + dLeft}px`;\n    lastDraggedEl.style.top = `${lastDraggedEl.offsetTop + dTop}px`;\n\n    // TODO(gs): attached callback doesn't seem to be called on appendChild.\n    // https://github.com/webcomponents/webcomponentsjs/issues/18\n    if (DragDrop.lastDraggedEl.attachedCallback) {\n      DragDrop.lastDraggedEl.attachedCallback();\n    }\n    DragDrop.dragEnd();\n  }\n}\n\n\nclass Rect extends Region {\n  constructor() {\n    super();\n  }\n\n  createdCallback() {\n    super.createdCallback();\n    this.createShadowRoot().appendChild(Utils.activateTemplate(template, doc));\n  }\n\n  /**\n   * Registers `pb-r-rect` to the document.\n   *\n   * @method register\n   * @static\n   * @param {!Document} currentDoc The document object to register the element to.\n   * @param {!Element} rectTemplate The template for the `pb-r-rect`'s element shadow DOM.\n   */\n  static register(currentDoc, rectTemplate) {\n    if (doc || template) {\n      // Registration has already happened.\n      return;\n    }\n\n    doc = currentDoc;\n    template = rectTemplate;\n    document.registerElement(EL_NAME,  {\n      prototype: Abilities.config(\n          Rect,\n          {},\n          new SmartDroppable(true)).prototype\n    });\n  }\n}\n\nexport default Rect = Rect;\n\nUtils.makeGlobal('pb.region.Rect', Rect);\n\nif (window['TEST_MODE']) {\n  Utils.makeGlobal('pb.region.Rect.SmartDroppable', SmartDroppable);\n}\n","import Check     from 'src/check';\nimport PbElement from 'src/pbelement';\nimport Utils     from 'src/utils';\n\nlet doc = null;\nlet templates = null;\n\nconst ATTR_ROW = 'pb-row';\nconst ATTR_COL = 'pb-col';\nconst EL_NAME = 'pb-s-rectgrid';\n\n/**\n * A surface that lays out its components in a grid. To use this, add attributes `pb-row` and\n * `pb-col` to the element `pb-s-rectgrid`. These are the number of rows and columns in the grid.\n *\n * Add the contents of the grid as children of this element. Use `pb-row` and `pb-col` attributes on\n * them to indicate their positions in the grid.\n *\n * @class surface.RectGrid\n * @extends PbElement\n */\nexport default class RectGrid extends PbElement {\n  createdCallback() {\n    super.createdCallback();\n\n    // Create the shadow DOM.\n    this.createShadowRoot()\n        .appendChild(Utils.activateTemplate(templates.main, doc));\n\n    // Initializes the data.\n    let rowCount = Check($(this).attr(ATTR_ROW)).isInt().orThrows();\n    let colCount = Check($(this).attr(ATTR_COL)).isInt().orThrows();\n    let rootEl = this.shadowRoot.querySelector('#content');\n\n    // Add the rows.\n    for (let row = 0; row < rowCount; row++) {\n      rootEl.appendChild(Utils.activateTemplate(templates.row, doc));\n    }\n\n    $(this.shadowRoot.querySelectorAll('#content > div'))\n        .each((row, rowEl) => {\n          for (let col = 0; col < colCount; col++) {\n            let colEl = Utils.activateTemplate(templates.col, doc);\n            $(colEl.querySelector('content'))\n                .attr('select', `[${ATTR_ROW}=\"${row}\"][${ATTR_COL}=\"${col}\"]`)\n                .attr(ATTR_ROW, row)\n                .attr(ATTR_COL, col);\n            rowEl.appendChild(colEl);\n          }\n        });\n  }\n\n  attachedCallback() {\n    super.attachedCallback();\n  }\n\n  /**\n   * Returns the element at the given row and column, or null if not found.\n   * @param  {number} row The row index of the element to be returned.\n   * @param  {number} col The col index of the element to be returned.\n   * @return {HTMLElement|null} The HTML element at the given row and col, or null if not\n   *     found.\n   */\n  get(row, col) {\n    let contentEl = this.shadowRoot\n        .querySelector(`content[${ATTR_ROW}=\"${row}\"][${ATTR_COL}=\"${col}\"]`);\n    return contentEl ? contentEl.getDistributedNodes()[0] : null;\n  }\n\n  /**\n   * Registers `pb-s-rectgrid` to the document.\n   *\n   * @method register\n   * @static\n   * @param {!Document} currentDoc The document object to register the element to.\n   * @param {!Object} gridTemplates Object containing template for the `pb-s-rectgrid`'s element \n   *     shadow DOM.\n   * @param {!Element} gridTemplates.main The main template for the element.\n   * @param {!Element} gridTemplates.row The template for every row in the grid.\n   * @param {!Element} gridTemplates.col The template for every column in the grid.\n   */\n  static register(currentDoc, gridTemplates) {\n    if (doc || templates) {\n      // Register has already happened.\n      return;\n    }\n\n    doc = currentDoc;\n    templates = gridTemplates;\n\n    document.registerElement(EL_NAME, {prototype: RectGrid.prototype});\n  }\n}\n\nUtils.makeGlobal('pb.surface.RectGrid', RectGrid);\n","import Utils from 'src/utils';\n\n/**\n * Service that lets the user preview an element on mouse hover.\n *\n * @class service.Preview\n * @static\n */\nlet Preview = {\n\n  /**\n   * Element that is being previewed, if any.\n   *\n   * @type Element\n   * @property previewedEl\n   */\n  previewedEl: null\n};\n\nexport default Preview = Preview;\n\nUtils.makeGlobal('pb.service.Preview', Preview);\n","import Events    from 'src/events';\nimport PbElement from 'src/pbelement';\nimport Utils     from 'src/utils';\n\nimport PreviewService from 'src/service/preview';\n\n/**\n * Class that contains a preview if the mouse enters the parent element. This will display\n * the children element as preview.\n *\n * @class ui.Preview\n * @extends PbElement\n */\n\nlet registered = false;\n\nconst EL_NAME = 'pb-u-preview';\n\nfunction handleMouseOver() {\n  PreviewService.previewedEl = this;\n}\n\nfunction handleMouseOut(e) {\n  PreviewService.previewedEl = null;\n}\n\nexport default class Preview extends PbElement {\n  createdCallback() {\n    super.createdCallback();\n    this.createShadowRoot();\n    this.attachedCallback();\n  }\n\n  attachedCallback() {\n    super.attachedCallback();\n    if (this.parentElement) {\n      Events.of(this.parentElement, this)\n          .listen('mouseenter', handleMouseOver.bind(this))\n          .listen('mouseleave', handleMouseOut.bind(this));\n    }\n  }\n\n  detachedCallback() {\n    if (this.parentElement) {\n      Events.of(this.parentElement, this).unlisten();\n    }\n    super.detachedCallback();\n  }\n\n  /**\n   * Registers `pb-u-preview` to the document.\n   *\n   * @method register\n   * @static\n   */\n  static register() {\n    if (!registered) {\n      document.registerElement(EL_NAME, {prototype: Preview.prototype});\n    }\n  }\n}\n\nUtils.makeGlobal('pb.ui.Preview', Preview);\n","import PbElement from 'src/pbelement';\nimport Utils from 'src/utils';\nimport PreviewService from 'src/service/preview';\n\n/**\n * Element that displays the innerHTML of the `pb-u-preview` of element currently being hovered \n * over. This works in tandem with [[ui.Preview|ui.Preview]] and \n * [[service.Preview|service.Preview]].\n *\n * @class ui.Previewer\n * @extends PbElement\n */\n\nlet template = null;\nlet doc = null;\n\nconst _previewElHandler = Symbol();\n\nconst EL_NAME = 'pb-u-previewer';\n\nfunction handlePreviewEl() {\n  if (PreviewService.previewedEl) {\n    this.innerHTML = PreviewService.previewedEl.innerHTML;\n  } else {\n    this.innerHTML = '';\n  }\n}\n\nexport default class Previewer extends PbElement {\n  createdCallback() {\n    super.createdCallback();\n    this.createShadowRoot()\n        .appendChild(Utils.activateTemplate(template, doc));\n\n    this.attachedCallback();\n  }\n\n  attachedCallback() {\n    super.attachedCallback();\n    this[_previewElHandler] = Utils.observe(\n        PreviewService, \n        'previewedEl', \n        handlePreviewEl.bind(this));\n  }\n\n  detachedCallback() {\n    Object.unobserve(PreviewService, this[_previewElHandler]);\n    super.detachedCallback();\n  }\n\n  /**\n   * Registers `pb-u-previewer` to the document.\n   *\n   * @method register\n   * @static\n   * @param {!Document} currentDoc The document object to register the element to.\n   * @param {!Element} previewerTemplate The template for the `pb-u-previewer`'s element shadow DOM.\n   */\n  static register(currentDoc, previewerTemplate) {\n    if (!template && !doc) {\n      document.registerElement(EL_NAME, {prototype: Previewer.prototype});\n    }\n\n    template = previewerTemplate;\n    doc = currentDoc;\n  }\n}\n\nUtils.makeGlobal('pb.ui.Previewer', Previewer);\n","import Check     from 'src/check';\nimport PbElement from 'src/pbelement';\nimport Utils     from 'src/utils';\n\nlet doc = null;\nlet handlebars = null;\n\nconst EL_NAME = 'pb-u-template';\n\n/**\n * Contains a handlebars js template. When this element is created, it will process the handlebars\n * js template within it and replace itself with the processed templates. To pass in variables into\n * the template, add `data-<name>=\"<var>\"` attributes to the element, where `name` is the key to be\n * used in the template, and var is the property name accessible globally.\n *\n * This class also registers a `{{#pb-for <from> <to> <step>}}` block helper. This is a simple for\n * loop that copies the inner block several times. You can access the index of the loop using the\n * `@index` variable.\n *\n * @class ui.Template\n * @extends PbElement\n */\nexport default class Template extends PbElement {\n  constructor() {\n    super();\n  }\n\n  createdCallback() {\n    super.createdCallback();\n    let templateStr = this.innerHTML;\n    let data = {};\n    for (let key in this.dataset) {\n      let valueStr = this.dataset[key];\n      data[key] = window[valueStr] || valueStr;\n    }\n    $(this).replaceWith(handlebars.compile(this.innerHTML)(data));\n  }\n\n  /**\n   * Registers `pb-u-template` to the document.\n   *\n   * @method register\n   * @static\n   * @param {!Document} currentDoc The document object to register the element to.\n   * @param {!Handlebars} handlebars_ref Reference to the Handlebars library.\n   */\n  static register(currentDoc, handlebars_ref) {\n    if (!doc && !handlebars) {\n      // Only registers once.\n      document.registerElement(EL_NAME, {prototype: Template.prototype});\n    }\n    \n    doc = currentDoc;\n    handlebars = handlebars_ref;\n\n    handlebars.registerHelper('pb-for', function(from, to, step, options) {\n      if (options === undefined) {\n        // Shift the args if step is not defined.\n        options = step;\n        step = 1;\n      }\n      let rv = '';\n      for (let i = Check(from).isInt().orThrows(); \n          i < Check(to).isInt().orThrows(); \n          i += Check(step).isInt().orThrows()) {\n        let data = Handlebars.createFrame(options.data || {});\n        data.index = i;\n        rv += options.fn(this, { data: data });\n      } \n      return rv;\n    });\n  }\n}\n\nUtils.makeGlobal('pb.ui.Template', Template);\n"]}