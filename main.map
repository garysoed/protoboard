{"version":3,"file":"/Users/gsoed/proj/protoboard/main.js","sources":["@traceur/generated/TemplateParser/3","/Users/gsoed/proj/protoboard/src/as.js","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/1","/Users/gsoed/proj/protoboard/src/utils.js","@traceur/generated/TemplateParser/4","/Users/gsoed/proj/protoboard/src/surface/rectgrid.js","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/5","/Users/gsoed/proj/protoboard/src/modules.js"],"names":[],"mappings":"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","sourceRoot":"/Users/gsoed/proj/protoboard/","sourcesContent":["var __moduleName = $__placeholder__0;","let As = {\n  int(input, radix = 10) {\n    let output = Number.parseInt(input, radix);\n    if (Number.isNaN(output)) {\n      throw `${input} is not an integer with radix ${radix}`;\n    }\n\n    return output;\n  }\n};\n\nexport default As = As;\n\nif (!window.pb) {\n  window.pb = {};\n}\n\nwindow.pb.As = As;\n","var $__default = $__placeholder__0","return $__placeholder__0","get $__placeholder__0() { return $__placeholder__1; }","var Utils = {\n  /**\n   * Extracts the given template from the given document.\n   * @param  {string} templateQuery The query used to obtain the template.\n   * @param  {!Document} doc The document object to obtain the template from.\n   * @return {!Node} The node in the template.\n   */\n  extractTemplate(templateQuery, doc) {\n    return this.activateTemplate(doc.querySelector(templateQuery), doc);\n  },\n\n  activateTemplate(template, doc) {\n    return doc.importNode(template.content, true);\n  },\n\n  /**\n   * Returns the referenced function, or noop function if the referenced function does not exist.\n   * @param  {!Object} scope Object containing the referenced function.\n   * @param  {string} name Name of the function to return.\n   * @return {!Function} The referenced function, or noop function if the referenced function does\n   *     not exist.\n   */\n  nonNullFn(scope, name) {\n    return scope[name] || (() => {});\n  },\n\n  /**\n   * Observes the given property on the given object.\n   * @param {!Object} object Object to observe changes to.\n   * @param {string|null} property The property name to listen to, or null to listen to all \n   *     properties.\n   * @param {Function} handler Handler called when a property has changed. The handler accepts 3\n   *     arguments: property name, change type, and the old value of the property.\n   */\n  observe(object, property, handler) {\n    Object.observe(object, function(changes) {\n      changes.forEach(change => {\n        if (!property || change.name === property) {\n          handler(change.name, change.type, change.oldValue);\n        }\n      });\n    });\n  },\n\n  getContentElementRoot(el) {\n    return el.querySelectorAll(':not(style):not(script)');\n  }\n};\n\nexport default Utils = Utils;\n\nif (!window.pb) {\n  window.pb = {};\n}\n\nwindow.pb.Utils = Utils;\n","$__placeholder__0[$traceurRuntime.toProperty($__placeholder__1)]","import Utils from 'src/utils';\nimport As from 'src/as';\n\nlet doc = null;\nlet templates = null;\n\n/**\n * @class A surface that lays out its components in a grid. To use this, add attributes \"row\" and\n *     \"col\" to the element \"pb-s-rectgrid\". These are the number of rows and columns in the grid.\n *\n *     Add the contents of the grid as children of this element. Use \"row\" and \"col\" attributes on\n *     them to indicate their positions in the grid.\n */\nexport default class RectGrid extends HTMLElement {\n  createdCallback() {\n    // Create the shadow DOM.\n    let shadowRoot = this.createShadowRoot();\n    shadowRoot.appendChild(Utils.activateTemplate(templates.main, doc));\n\n    // Initializes the data.\n    let rowCount = As.int($(this).attr('row'));\n    let colCount = As.int($(this).attr('col'));\n    let rootEl = shadowRoot.querySelector('#root');\n\n    // Add the rows.\n    for (let row = 0; row < rowCount; row++) {\n      rootEl.appendChild(Utils.activateTemplate(templates.row, doc));\n    }\n\n    $(shadowRoot.querySelectorAll('#root > div'))\n        .each((row, rowEl) => {\n          for (let col = 0; col < colCount; col++) {\n            let colEl = Utils.activateTemplate(templates.col, doc);\n            $(colEl.querySelector('content'))\n                .attr('select', `[row=\"${row}\"][col=\"${col}\"]`)\n                .attr('row', row)\n                .attr('col', col);\n            rowEl.appendChild(colEl);\n          }\n        });\n  }\n\n  /**\n   * Returns the element at the given row and column, or null if not found.\n   * @param  {number} row The row index of the element to be returned.\n   * @param  {number} col The col index of the element to be returned.\n   * @return {HTMLElement|null} The HTML element at the given row and col, or null if not\n   *     found.\n   */\n  get(row, col) {\n    let contentEl = this.shadowRoot .querySelector(`content[row=\"${row}\"][col=\"${col}\"]`);\n    return contentEl ? contentEl.getDistributedNodes()[0] : null;\n  }\n\n  static register(currentDoc, gridTemplates) {\n    doc = currentDoc;\n    templates = gridTemplates;\n\n    // TODO: Check if element is registered.\n    document.registerElement('pb-s-rectgrid', {prototype: RectGrid.prototype});\n  }\n}\n\nif (!window.pb) {\n  window.pb = {};\n}\n\nwindow.pb.RectGrid = RectGrid;\n","var $__placeholder__0 = $__placeholder__1","$traceurRuntime.defaultSuperCall(this,\n                $__placeholder__0.prototype, arguments)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","var $__default = $__placeholder__0","/**\n * References all the modules.\n */\n\nimport Util from 'src/utils';\nimport {} from 'src/surface/modules';\n"]}